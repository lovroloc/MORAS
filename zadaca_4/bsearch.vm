push constant 2048
pop pointer 1
push constant 1
pop that 0
push constant 2
pop that 1
push constant 3
pop that 2
push constant 4
pop that 3
push constant 5
pop that 4

push constant 2048
push constant 5
push constant 2
call BS.bs 3

label END
goto END

function BS.bs 3
push constant 0
pop local 0
push argument 1
push constant 1
sub
pop local 1

label LOOP_START
push local 0
push local 1
gt
if-goto NOT_FOUND

push local 0
push local 1
push local 0
sub
push constant 2
call BS.div 2
add
pop local 2

push local 2
push argument 0
add
pop pointer 1
push that 0
push argument 2
eq
if-goto FOUND

push local 2
push argument 0
add
pop pointer 1
push that 0
push argument 2
gt
if-goto GO_LEFT

push local 2
push argument 0
add
pop pointer 1
push that 0
push argument 2
lt
if-goto GO_RIGHT

label GO_LEFT
push local 2
push constant 1
sub
pop local 1
goto LOOP_START

label GO_RIGHT
push local 2
push constant 1
add
pop local 0
goto LOOP_START

label NOT_FOUND
push constant 1
neg
goto RETURN

label FOUND
push local 2
goto RETURN

label RETURN
return

function BS.div 2
push constant 0
pop local 0

push argument 1
pop local 1

push argument 1
push argument 0
gt
if-goto IS_GREATER

label LOOP_START
push local 1
push argument 1
add
push argument 0
gt
if-goto LOOP_END

push local 1
push argument 1
add
pop local 1

push constant 1
push local 0
add
pop local 0

goto LOOP_START
label LOOP_END

push constant 1
push local 0
add
goto RETURN

label IS_GREATER
push constant 0
label RETURN
return